export declare type Matcher = (value: any, ...args: any[]) => MatchResult;
export declare type Matchers = {
  [key: string]: Matcher;
};
export declare type MatchResult = {
  pass: boolean;
  message?: string;
};
export declare function toBe(actual: any, expected: any): MatchResult;
export declare function toEqual(actual: any, expected: any): MatchResult;
export declare function toBeGreaterThan(
  actual: any,
  comparison: number,
): MatchResult;
export declare function toBeLessThan(
  actual: any,
  comparison: number,
): MatchResult;
export declare function toBeGreaterThanOrEqual(
  actual: any,
  comparison: number,
): MatchResult;
export declare function toBeLessThanOrEqual(
  actual: any,
  comparison: number,
): MatchResult;
export declare function toBeTruthy(value: any): MatchResult;
export declare function toBeFalsy(value: any): MatchResult;
export declare function toBeDefined(value: unknown): MatchResult;
export declare function toBeUndefined(value: unknown): MatchResult;
export declare function toBeNull(value: unknown): MatchResult;
export declare function toBeNaN(value: unknown): MatchResult;
export declare function toBeInstanceOf(
  value: any,
  expected: Function,
): MatchResult;
export declare function toMatch(
  value: any,
  pattern: RegExp | string,
): MatchResult;
export declare function toHaveProperty(
  value: any,
  propName: string,
): MatchResult;
export declare function toHaveLength(value: any, length: number): MatchResult;
export declare function toContain(value: any, item: any): MatchResult;
export declare function toThrow(
  value: any,
  error?: RegExp | string,
): MatchResult;
export declare function toHaveBeenCalled(value: any): MatchResult;
export declare function toHaveBeenCalledTimes(
  value: any,
  times: number,
): MatchResult;
export declare function toHaveBeenCalledWith(
  value: any,
  ...args: any[]
): MatchResult;
export declare function toHaveBeenLastCalledWith(
  value: any,
  ...args: any[]
): MatchResult;
export declare function toHaveBeenNthCalledWith(
  value: any,
  nth: number,
  ...args: any[]
): MatchResult;
export declare function toHaveReturnedWith(
  value: any,
  result: any,
): MatchResult;
export declare function toHaveReturned(value: any): MatchResult;
export declare function toHaveLastReturnedWith(
  value: any,
  expected: any,
): MatchResult;
export declare function toHaveReturnedTimes(
  value: any,
  times: number,
): MatchResult;
export declare function toHaveNthReturnedWith(
  value: any,
  nth: number,
  expected: any,
): MatchResult;
