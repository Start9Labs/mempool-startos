import { Config } from "../../lib/config/builder/config";
export declare const configSpec: Config<{
    mediasources: ("nextcloud" | "filebrowser")[];
    testListUnion: {
        union: {
            unionSelectKey: "lnd";
            unionValueKey: {
                name: string;
            };
        };
    }[];
    rpc: {
        enable: boolean;
        username: string;
        password: string;
        bio: string;
        advanced: {
            auth: string[];
            serialversion: "segwit" | "non-segwit";
            servertimeout: number;
            threads: number;
            workqueue: number;
        };
    };
    "zmq-enabled": boolean;
    txindex: boolean;
    wallet: {
        enable: boolean;
        avoidpartialspends: boolean;
        discardfee: number;
    };
    advanced: {
        mempool: {
            mempoolfullrbf: boolean;
            persistmempool: boolean;
            maxmempool: number;
            mempoolexpiry: number;
        };
        peers: {
            listen: boolean;
            onlyconnect: boolean;
            onlyonion: boolean;
            addnode: {
                hostname: string | null | undefined;
                port: number | null | undefined;
            }[];
        };
        dbcache: number | null | undefined;
        pruning: {
            unionSelectKey: "disabled";
            unionValueKey: {};
        } | {
            unionSelectKey: "automatic";
            unionValueKey: {
                size: number;
            };
        } | {
            unionSelectKey: "manual";
            unionValueKey: {
                size: number;
            };
        };
        blockfilters: {
            blockfilterindex: boolean;
            peerblockfilters: boolean;
        };
        bloomfilters: {
            peerbloomfilters: boolean;
        };
    };
}, never>;
export declare const matchConfigSpec: import("ts-matches").Validator<unknown, {
    mediasources: ("nextcloud" | "filebrowser")[];
    testListUnion: {
        union: {
            unionSelectKey: "lnd";
            unionValueKey: {
                name: string;
            };
        };
    }[];
    rpc: {
        enable: boolean;
        username: string;
        password: string;
        bio: string;
        advanced: {
            auth: string[];
            serialversion: "segwit" | "non-segwit";
            servertimeout: number;
            threads: number;
            workqueue: number;
        };
    };
    "zmq-enabled": boolean;
    txindex: boolean;
    wallet: {
        enable: boolean;
        avoidpartialspends: boolean;
        discardfee: number;
    };
    advanced: {
        mempool: {
            mempoolfullrbf: boolean;
            persistmempool: boolean;
            maxmempool: number;
            mempoolexpiry: number;
        };
        peers: {
            listen: boolean;
            onlyconnect: boolean;
            onlyonion: boolean;
            addnode: {
                hostname: string | null | undefined;
                port: number | null | undefined;
            }[];
        };
        dbcache: number | null | undefined;
        pruning: {
            unionSelectKey: "disabled";
            unionValueKey: {};
        } | {
            unionSelectKey: "automatic";
            unionValueKey: {
                size: number;
            };
        } | {
            unionSelectKey: "manual";
            unionValueKey: {
                size: number;
            };
        };
        blockfilters: {
            blockfilterindex: boolean;
            peerblockfilters: boolean;
        };
        bloomfilters: {
            peerbloomfilters: boolean;
        };
    };
}>;
export type ConfigSpec = typeof matchConfigSpec._TYPE;
