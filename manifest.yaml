id: mempool
title: Mempool
version: 2.5.0.2
release-notes: | 
  * Removes deprecated optional dependency of BTC RPC Proxy
  * Uses Bitcoin Core as direct dependency
license: AGPL
wrapper-repo: "https://github.com/Start9Labs/mempool-wrapper"
upstream-repo: "https://github.com/mempool/mempool"
support-site: "https://mempool.space/docs/api/rest"
marketing-site: "https://mempool.space/"
donation-url: "https://mempool.space/sponsor"
build: ["make"]
description:
  short: "A Bitcoin node and network visualizer."
  long: "Mempool is the fully featured visualizer, explorer, and API service running on https://mempool.space/, an open source project developed and operated for the benefit of the Bitcoin community, with a focus on the emerging transaction fee market to help our transition into a multi-layer ecosystem."
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: docker_entrypoint.sh
  args: []
  mounts:
    main: /root
    cache: /backend/cache
    db: /var/lib/mysql
    lnd: /mnt/lnd
    c-lightning: "/mnt/c-lightning"
health-checks:
  web-ui:
    name: Web Interface
    success-message: The Mempool UI is ready to visit in a web browser
    type: script
  api:
    name: API
    success-message: The Mempool API is reachable and responsive.
    type: docker
    image: main
    system: false
    entrypoint: health-check.sh
    inject: true
    args: ["api"]
    mounts: {}
    io-format: json
  synced:
    name: Transaction Indexer
    success-message: Bitcoin is fully indexed. You may now launch Mempool.
    type: docker
    image: main
    system: false
    entrypoint: check-synced.sh
    inject: true
    args: ["sync"]
    mounts: {}
    io-format: json
config:
  get:
    type: script
  set:
    type: script
properties:
  type: script
dependencies:
  bitcoind:
    version: ">=0.21.1.2 <27.0.0"
    requirement:
      type: "required"
    description: Used to subscribe to new block events from a full archival node
    config:
      check:
        type: script
      auto-configure:
        type: script
  electrs:
    version: ">=0.9.6 <0.10.0"
    requirement:
      type: "opt-out"
      how: Set Enable Electrs to Disabled in the config
    description: Used to provide an index for address lookups
  lnd:
    version: ">=0.14.3 <0.17.0"
    description: Used to communicate with the Lightning Network.
    requirement:
      type: "opt-in"
      how: Use the LND instance by default
    config: ~
  c-lightning:
    version: ">=0.10.1 <24.0.0"
    description: Used to communicate with the Lightning Network.
    requirement:
      type: "opt-in"
      how: Can opt to use the CLN instance instead of LND
    config: ~
volumes: 
  main:
    type: data
  cache:
    type: data
  db:
    type: data
  lnd:
    type: pointer
    package-id: lnd
    volume-id: main
    path: "/public"
    readonly: true
  c-lightning:
    type: pointer
    package-id: c-lightning
    volume-id: main
    path: /shared
    readonly: true
alerts:
  start: |
    READ CAREFULLY! When first running Mempool, previous block fee estimates will show as zero values until the service is able to catch up. This is expected behaviour.
    ALSO: Lookups may be slow or time out altogether while the service is still warming up, or if there are too many other things running on your system. If address lookups aren't working, try restarting electrs and try the lookup again.
interfaces:
  main:
    name: Mempool Interface
    description: Specifies the mempool interface to listen on for HTTP connections.
    tor-config:
      port-mapping:
        80: "8080"
    lan-config:
      443:  
        ssl: true
        internal: 8080
    ui: true
    protocols:
      - tcp
      - http
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
      cache: /backend/cache
      db: /var/lib/mysql
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
      cache: /backend/cache
      db: /var/lib/mysql
    io-format: yaml
migrations:
  from:
    "*":
      type: script
  to:
    "*":
      type: script
